{"version":3,"sources":["../../../src/ngu-modal/ngu-modal.service.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAQ,MAAO,cAAA,CAAe;AAGvC;IAKE;QAJA,cAAc;QACd,cAAS,GAAG,KAAK,CAAC;QAClB,aAAQ,GAAiB,IAAI,OAAO,EAAO,CAAC;IAE5B,CAAC;IAEjB,8BAAI,GAAJ,UAAK,CAAM;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;QACpD,+BAA+B;IACjC,CAAC;IAED,+BAAK,GAAL,UAAM,KAAU;QACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;QACxD,+BAA+B;IACjC,CAAC;IAED,iCAAO,GAAP,UAAQ,CAAS,EAAE,OAAgB;QACjC,MAAM,CAAC,IAAI,OAAO,CAAU,UAAA,OAAO;YACjC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACL,CAAC;IAGI,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,sBAAC;CAhCD,AAgCC,IAAA;SAhCY,eAAe","file":"ngu-modal.service.js","sourceRoot":"","sourcesContent":["import { Observable } from 'rxjs/Observable';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\n\nexport class NguModalService {\n  // id: number;\n  openModal = false;\n  isOpened: Subject<Vam> = new Subject<Vam>();\n\n  constructor() { }\n\n  open(m: any) {\n    this.openModal = true;\n    this.isOpened.next({ type: this.openModal, id: m });\n    // console.log(this.openModal);\n  }\n\n  close(index: any) {\n    this.openModal = false;\n    this.isOpened.next({ type: this.openModal, id: index });\n    // console.log(this.openModal);\n  }\n\n  confirm(m: number, message?: string) {\n    return new Promise<boolean>(resolve => {\n      return resolve(window.confirm(message || 'Is it OK?'));\n    });\n  }\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nexport interface Vam {\n  type: boolean;\n  id: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}